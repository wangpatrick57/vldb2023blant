These are a few files from "Wayne's little Data Structures and
Algorithms Library", available in its full spleandour from

    http://www.cs.toronto.edu/~wayne

---SORTS---

To see how the various sorts behave as you change the size and number
of elements for a constant total number of bytes in the array, change
the value of ElementSize in sorts.c.  For example, I find that with
TOTBYTES set to 1 megabyte, with ElementSize 8, you get 131K elements,
and qsort is compararable to the other sorts.  If ElementSize is much
bigger (so that there are only a few tens of thousands of elements)
then qsort fares better; i ElementSize is smaller (ie, number of
elements is bigger), then qsort is slower than the others.  It's when
there's more than about 100,000 elements that qsort starts to become
slow in comparison to the others.

