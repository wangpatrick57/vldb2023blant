Compile with gcc -O2 -o stats *.c -lm
---

Example usage:

data.in contains 100 numbers uniformly distributed in [0,1].

# Get basic stats:
% cat data.in | stats
# 100 mean 0.503569 min 0.0183207 max 0.989868 stdDev 0.289784 var 0.083975 skew 52.323

This means the '#' (number) of numbers was 100, the average was 0.503, the
smallest seen was 0.0183, the largest was 0.989, followed by the standard
deviation, variance, and an obscure quantity called the "skew".
---

Get a histogram:

% cat data.in | stats -h 10 0 1
# 100 mean 0.503569 min 0.0183207 max 0.989868 stdDev 0.289784 var 0.083975 skew 52.323
-0.1 0
0 9
0.1 9
0.2 11
0.3 12
0.4 10
0.5 8
0.6 10
0.7 11
0.8 10
0.9 10
1 0

The command line opts mean: create a histogram with 10 bins ranging from 0
to 1.  It actually outputs 12 bins, because we also include bins for anything
that falls outside your [min,max] range.  In this case, both these "endpoint"
bins contain 0 elements.
---

Now a histogram normalized to probability density.  We expect the uniform
distribution to have density 1.0 everywhere.
% cat data.in | stats -p 10 0 1
# 100 mean 0.503569 min 0.0183207 max 0.989868 stdDev 0.289784 var 0.083975 skew 52.323
-0.1 0
0 0.9
0.1 0.9
0.2 1.1
0.3 1.2
0.4 1
0.5 0.8
0.6 1
0.7 1.1
0.8 1
0.9 1
1 0
--

Now a (normalized to probability) cumulative distribution:

% cat data.in | stats -pc 10 0 1
# 100 mean 0.503569 min 0.0183207 max 0.989868 stdDev 0.289784 var 0.083975 skew 52.323
-0.1 0
0 0.09
0.1 0.18
0.2 0.29
0.3 0.41
0.4 0.51
0.5 0.59
0.6 0.69
0.7 0.8
0.8 0.9
0.9 1
1 1
